//1.roman number to number
function romanToNum(roman) {
  const romanToNumMap = {
    I: 1,
    V: 5,
    X: 10,
    L: 50,
    C: 100,
    D: 500,
    M: 1000
  };
  let result = 0;
  for (let i = 0; i < roman.length; i++) {
    const currentVal = romanToNumMap[roman[i]];
    const nextVal = romanToNumMap[roman[i + 1]];
    if (nextVal && nextVal > currentVal) {
      result += nextVal - currentVal;
      i++;
    } else {
      result += currentVal;
    }
  }
  return result;
}
  console.log(romanToNum('XIV')); //Output:14
console.log(romanToNum('LXIX')); // Output: 69
 
//2. find out sum of pair to target
function findPair(array, target) {
  var pairs = [];

  for (var i = 0; i < array.length; i++) {
    for (var j = i + 1; j < array.length; j++) {
      if (array[i] + array[j] === target) {
        pairs.push([array[i], array[j]]);
      }
    }
  }

  return pairs;
}

var array = [1, 2, 3, 4, 5, 6];
var target = 7;
var pairs = findPair(array, target);
console.log(pairs); 
 
//3.function to reverse the string 
function reverseString(str) {
  // Check if string contains non-ASCII characters
  if (!/^[\x00-\x7F]*$/.test(str)) {
    throw new Error('Input contains non-ASCII characters.');
  }
  // Reverse the string using Array.reverse() and String.join()
  return str.split('').reverse().join('');
}
console.log(reverseString('hello')); // Output: 'olleh'
console.log(reverseString('world')); // Output: 'dlrow'

//4.validation 
form--->html
---------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body class="b1">
    <form id="myForm">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
        <br><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br><br>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" minlength="6" required>
        <br><br>
        <input type="submit" value="Submit">
      </form>
      
</body>
</html>



form.css
------------------------------------
input[type="submit"] {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  input[type="submit"]:hover {
    background-color: #45a049;
  }
  
  .b1{
    font-size: medium;
    text-align: center;
    padding-top: 100px;
  }
  
  
  
  ****************************************
  
  form.js
  ----------------
  
  const form = document.getElementById("myForm");

form.addEventListener("submit", (event) => {
  event.preventDefault();
  
  const name = document.getElementById("name").value.trim();
  const email = document.getElementById("email").value.trim();
  const password = document.getElementById("password").value.trim();
  
  if (!isValidName(name)) {
    alert("Invalid name. Name must contain only letters and spaces.");
    return;
  }
  
  if (!isValidEmail(email)) {
    alert("Invalid email.");
    return;
  }
  
  if (!isValidPassword(password)) {
    alert("Invalid password. Password must be at least 6 characters long.");
    return;
  }
  
  // if all data is valid, submit the form
  form.submit();
});

function isValidName(name) {
  const regex = /^[a-zA-Z\s]+$/;
  return regex.test(name);
}

function isValidEmail(email) {
  const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return regex.test(email);
}

function isValidPassword(password) {
  return password.length >= 6;
}


//5.create employee form with name,id,location,blood group,experience and skill
prgm.html
<!DOCTYPE html>
<html>
<head>
  <title>Employee Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    h1 {
      text-align: center;
    }

    form {
      width: 400px;
      margin: 0 auto;
      border: 1px solid #ccc;
      padding: 20px;
    }

    label {
      display: block;
      margin-bottom: 5px;
    }

    input[type="text"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      margin-bottom: 20px;
    }

    button[type="submit"] {
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button[type="submit"]:hover {
      background-color: #3e8e41;
    }

    #success-message {
      color: green;
      text-align: center;
      margin-top: 20px;
    }

    #error-message {
      color: red;
      text-align: center;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <h1>Employee Form</h1>
  <form id="employee-form">
    <label for="emp_id">Employee ID:</label>
    <input type="text" id="emp_id" name="emp_id" required>

    <label for="emp_name">Employee Name:</label>
    <input type="text" id="emp_name" name="emp_name" required>


    <label for="emp_location">Employee Location:</label>
    <input type="text" id="emp_location" name="emp_location" required>

    <label for="emp_addr">Employee Address:</label>
    <input type="text" id="emp_addr" name="emp_addr" required>

    <label for="bloodgroup">Blood Group:</label>
    <input type="text" id="bloodgroup" name="bloodgroup" required>

    <label for="password">New password:</label>
    <input type="password" id="password" name="password" required>
    <label for="repassword">Retype password:</label>
    <input type="password" id="repassword" name="repassword"  onkeyup="validateForm()" required>
    
    <label for="experience">Experience:</label>
    <input type="text" id="experience" name="experience" required>

    <label for="skills">Skills:</label>
    <input type="text" id="skills" name="skills" required>

    <button type="submit" id="submit-form">Submit</button>
  </form>
  
  <div id="success-message"></div>
  <div id="error-message"></div>
  <script src="prgm.js"></script>
  <script>
    
    function validateForm() {
      var password = document.getElementById("password").value;
      var confirm_password = document.getElementById("repassword").value;
    
      if (password != confirm_password) {
        alert("Passwords do not match!");
        return false;
    }}
    
    </script>
</body>
</html>

prgm.js
const form = document.getElementById('employee-form');
const successMessage = document.getElementById('success-message');
const errorMessage = document.getElementById('error-message');

form.addEventListener('submit', (e) => {
  e.preventDefault();

  const formData = new FormData(form);
  const xhr = new XMLHttpRequest();

  xhr.onreadystatechange = function() {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        successMessage.innerHTML = 'Employee form submitted successfully.';
        errorMessage.innerHTML = '';
        form.reset();
      } else {
        errorMessage.innerHTML = 'There was an error submitting the form.';
        successMessage.innerHTML = '';
      }
    }
  };

  xhr.open('POST', 'submit-employee-form.php', true);
  xhr.send(formData);
});

  